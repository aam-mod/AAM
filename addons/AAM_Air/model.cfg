class CfgSkeletons {
	class Default {
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class Vehicle : Default {
		skeletonInherit = "Default";
	};
	class Helicopter: Vehicle
	{
		skeletonInherit="Vehicle";
		skeletonBones[]={};
	};
 	class UH60M_skeleton: Helicopter {
		isdiscrete=0;
		skeletonInherit="Helicopter";
		skeletonBones[]= {
			"dampers","",
			"damper_rear","",
			"elevator","",
			"horizont_1","",
			"horizont_1b","",
			"compass_1","",

			"horizont_2","",
			"horizont_2b","",
			"compass_2","",

			"mala vrtule","",
			"velka vrtule","",

			"door_l","",
			"glassld","door_l",
			"door_r","",
			"glassrd","door_r",

			"rotordive","velka vrtule",
			"rotor static dive","velka vrtule"

		};
	};
 	class UH60M_MG_skeleton: UH60M_skeleton {
		skeletonInherit="UH60M_skeleton";
		skeletonBones[]= {
			"otocvez","",
			"otochlaven","otocvez",
			"otocvez_1","",
			"otochlaven_1","otocvez_1",
			"hitbody","",
			"hitengine","",
			"Esssx","",
			"Wind_f","",
			"weap_m",""
		};
	};
};
class Rotation {
	type = "rotation";
	memory = 1;
	minValue = 0;
	maxValue = 1;
	angle0 = 0;
	angle1 = 1;
};
class CfgModels {
	class Default {
		sectionsInherit="";
		sections[] = {};
		skeletonName = "";
	};
	class Vehicle: Default {
		sectionsInherit="Default";
		sections[] = {};
	};
	class Helicopter: Vehicle {
		sectionsInherit="Vehicle";
		sections[]={};
		skeletonName="Helicopter";
		class Animations {
			class IndicatorAltBaro;
			class IndicatorAltBaro2;
			class HorizonDive;
			class RotorTilt;
		};
	};
	class UH60M: Helicopter {
		skeletonName="UH60M_MG_skeleton";
		sectionsInherit="Helicopter";
		sections[]=
		{
			"trup",
			"podsvit pristroju",
			"mala vrtule blur",
			"mala vrtule staticka",
			"velka vrtule blur",
			"velka vrtule staticka",
			"camo1",
			"camo2",
			"clan",
			"clan_sign",
			"hitbody",
			"hitengine",
			"zasleh",
			"zasleh_1",
			"glass1",
			"weap_m",
			"Wind_f"
		};
		class Animations: Animations {
			class HRotor: Rotation {
				source = "rotorH";
				selection = "velka vrtule";
				axis = "velka osa";
				memory = 1;
				sourceAddress = "loop";
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = "rad +360";
			};
			class VRotor: Rotation {
				source = "rotorV";
				selection = "mala vrtule";
				axis = "mala osa";
				memory = 1;
				sourceAddress = "loop";
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = "rad -360";
			};
			class RotorTilt {
				selection="rotordive";
				source="rpm";
				axis="velka osa";
				type="translation";
				memory=1;
				minValue=0.000000;
				maxValue=12.0000000;
				offset0=0.00000;
				offset1=-6.250000;
			};
			class horizonDive {
				type="translation";
				source="horizonDive";
				selection="horizont_1";
				axis="axis_horizont_1";
				memory=1;
				minValue=-1.000000;
				maxValue=1.000000;
				offset0=-0.610000;
				offset1=0.610000;
			};
			class horizonDive_gunner: horizonDive {
				type="translation";
				source="horizonDive";
				selection="horizont_2";
				axis="axis_horizont_2";
				memory=1;
			};
			class horizonBank {
				type="rotation";
				source="horizonBank";
				selection="horizont_1";
				axis="axis_r_horizont_1";
				memory=1;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad +360";
				angle1="rad -360";
			};
			class horizonBank_gunner: horizonBank {
				type="rotation";
				source="horizonBank";
				selection="horizont_2";
				axis="axis_r_horizont_2";
				memory=1;
			};
			class HorizontBudik_bank: Rotation {
				source="horizonBank";
				selection="horizont";
				axis="horizont_budikBank_osa";
				memory=1;
				minValue="rad -360";
				maxValue="rad 360";
				angle0="rad 360";
				angle1="rad -360";
			};
			class HorizontBudik_dive: HorizontBudik_bank {
				source="horizonDive";
				axis="horizont_budikDive_osa";
				minValue="rad -40";
				maxValue="rad 40";
				angle0="rad -27";
				angle1="rad 27";
			};
			class IndicatorCompass: Rotation {
				source="direction";
				selection="compass_1";
				axis="axis_compass_1";
				memory=1;
				minValue=-3.141593;
				maxValue=3.141593;
				angle0=-3.141593;
				angle1=3.141593;
			};
			class IndicatorCompass_gunner: IndicatorCompass {
				source="direction";
				selection="compass_2";
				axis="axis_compass_2";
				memory=1;
			};
			class dampers: Rotation {
				source="altRadar";
				selection="dampers";
				axis="dampers_axis";
				maxValue=0.400000;
				angle0=-0.087266;
				angle1=-0.296706;
			};
			class dampers_rear: dampers {
				selection="damper_rear";
				axis="damper_rear_axis";
				angle0=0.000000;
			};
			class elevator: Rotation {
				source="speed";
				selection="elevator";
				axis="elevator_axis";
				minValue=25.000000;
				maxValue=27.799999;
				angle0=-0.523599;
				angle1=0.000000;
			};
			class IndicatorAltBaro: IndicatorAltBaro {
				type="rotation";
				source="altBaro";
				selection="nm_alt";
				axis="osa_nm_alt";
				memory=0;
				minValue=30.000000;
				maxValue=61.000000;
				angle0=0.000000;
				angle1=6.108653;
			};
			class IndicatorAltBaro2: IndicatorAltBaro2 {
				type="rotation";
				source="altBaro";
				selection="nm_alt2";
				axis="osa_nm_alt2";
				memory=0;
				minValue=30.000000;
				maxValue=61.000000;
				angle0=0.000000;
				angle1=6.108653;
			};
			class elevator_damage {
				type="hide";
				selection="elevator";
				source="damage";
			};
			class door_L {
				type="translation";
				source="door_L";
				selection="door_l";
				begin="door_l_e";
				end="door_l_b";
				minValue = 0.0;
				maxValue = 1.0;
				offset0 = 0.0;
				offset1 = 1.0;
				animPeriod = 0.0;
				initPhase = 0.0;
			};
			class door_R {
				type="translation";
				source="door_R";
				selection="door_r";
				begin="door_r_e";
				end="door_r_b";
				minValue = 0.0;
				maxValue = 1.0;
				offset0 = 0.0;
				offset1 = 1.0;
				animPeriod = 0.0;
				initPhase = 0.0;
			};
			class MainTurret {
				type="rotation";
				source="mainTurret";
				selection="OtocVez";
				axis="OsaVeze";
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad (-360)";
				angle1="rad (+360)";
			};
			class Turret_2: MainTurret {
				source="Turret_2";
				selection="otocvez_1";
				axis="OsaVeze_1";
				angle0="rad (-360)";
				angle1="rad (+360)";
			};
			class MainGun: MainTurret {
				source="mainGun";
				selection="OtocHlaven";
				axis="OsaHlavne";
				angle0="rad (-360)";
				angle1="rad (+360)";
			};
			class Gun_2: MainGun {
				source="Gun_2";
				selection="otochlaven_1";
				axis="OsaHlavne_1";
				angle0="rad (-360)";
				angle1="rad (+360)";
			};
			class otocvez_damage {
				type="hide";
				source="damage";
				selection="otocvez";
			};
			class HideEsssx {
				type="hide";
				selection="Esssx";
				source="HideEsssx";
				animPeriod=0.1;
			};
			class Hidden {
				type="hide";
				selection="hide";
				animPeriod=0.1;
				source="HideWeapons";
			};
			class wind_f {
				type="hide";
				selection="Wind_f";
				source="hidewindows";
				animPeriod=0.1;
			};
			class hideotochlaven: hidden {
				selection="otochlaven";
			};
			class hideotochlaven_1: hidden {
				selection="otochlaven_1";
			};
			class hideotocvez: hidden {
				selection="otocvez";
			};
			class hideotocvez_1: hidden {
				selection="otocvez_1";
			};
			class weap_m: hidden {
				selection="weap_m";
			};
			
		};
	};
};